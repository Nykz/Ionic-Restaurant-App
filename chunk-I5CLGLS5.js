import{a as m,d as h,e as R,g as I,j as x,p as P}from"./chunk-36II4WRS.js";function A(){if(typeof process>"u"){var n=typeof window<"u"?window:{},r=5e3,e=Date.now(),t=!1;n.document.addEventListener("deviceready",function(){console.log("Ionic Native: deviceready event fired after "+(Date.now()-e)+" ms"),t=!0}),setTimeout(function(){!t&&n.cordova&&console.warn("Ionic Native: deviceready did not fire within "+r+"ms. This can happen when plugins are in an inconsistent state. Try removing plugins from plugins/ and reinstalling them.")},r)}}var S={error:"cordova_not_available"},b={error:"plugin_not_installed"};function w(n){var r=function(){if(Promise)return new Promise(function(a,i){n(a,i)});console.error("No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.")};if(typeof window<"u"&&window.angular){var e=window.document,t=window.angular.element(e.querySelector("[ng-app]")||e.body).injector();if(t){var o=t.get("$q");return o(function(a,i){n(a,i)})}console.warn("Angular 1 was detected but $q couldn't be retrieved. This is usually when the app is not bootstrapped on the html or body tag. Falling back to native promises which won't trigger an automatic digest when promises resolve.")}return r()}function T(n,r,e,t){t===void 0&&(t={});var o,a,i=w(function(u,s){t.destruct?o=f(n,r,e,t,function(){for(var d=[],c=0;c<arguments.length;c++)d[c]=arguments[c];return u(d)},function(){for(var d=[],c=0;c<arguments.length;c++)d[c]=arguments[c];return s(d)}):o=f(n,r,e,t,u,s),a=s});return o&&o.error&&(i.catch(function(){}),typeof a=="function"&&a(o.error)),i}function N(n,r,e,t){return t===void 0&&(t={}),w(function(o,a){var i=f(n,r,e,t);i?i.error?a(i.error):i.then&&i.then(o).catch(a):a({error:"unexpected_error"})})}function L(n,r,e,t){return t===void 0&&(t={}),new m(function(o){var a;return t.destruct?a=f(n,r,e,t,function(){for(var i=[],u=0;u<arguments.length;u++)i[u]=arguments[u];return o.next(i)},function(){for(var i=[],u=0;u<arguments.length;u++)i[u]=arguments[u];return o.error(i)}):a=f(n,r,e,t,o.next.bind(o),o.error.bind(o)),a&&a.error&&(o.error(a.error),o.complete()),function(){try{if(t.clearFunction)return t.clearWithArgs?f(n,t.clearFunction,e,t,o.next.bind(o),o.error.bind(o)):f(n,t.clearFunction,[])}catch(i){console.warn("Unable to clear the previous observable watch for",n.constructor.getPluginName(),r),console.warn(i)}}})}function U(n,r){return r=typeof window<"u"&&r?E(window,r):r||(typeof window<"u"?window:{}),I(r,n)}function l(n,r,e){var t,o;typeof n=="string"?t=n:(t=n.constructor.getPluginRef(),e=n.constructor.getPluginName(),o=n.constructor.getPluginInstallName());var a=v(t);return!a||r&&typeof a[r]>"u"?typeof window>"u"||!window.cordova?(F(e,r),S):(D(e,o,r),b):!0}function k(n,r,e,t){if(r===void 0&&(r={}),r.sync)return n;if(r.callbackOrder==="reverse")n.unshift(t),n.unshift(e);else if(r.callbackStyle==="node")n.push(function(u,s){u?t(u):e(s)});else if(r.callbackStyle==="object"&&r.successName&&r.errorName){var o={};o[r.successName]=e,o[r.errorName]=t,n.push(o)}else if(typeof r.successIndex<"u"||typeof r.errorIndex<"u"){var a=function(){r.successIndex>n.length?n[r.successIndex]=e:n.splice(r.successIndex,0,e)},i=function(){r.errorIndex>n.length?n[r.errorIndex]=t:n.splice(r.errorIndex,0,t)};r.successIndex>r.errorIndex?(i(),a()):(a(),i())}else n.push(e),n.push(t);return n}function f(n,r,e,t,o,a){t===void 0&&(t={}),e=k(e,t,o,a);var i=l(n,r);if(i===!0){var u=v(n.constructor.getPluginRef());return u[r].apply(u,e)}else return i}function v(n){return typeof window<"u"?E(window,n):null}function E(n,r){for(var e=r.split("."),t=n,o=0;o<e.length;o++){if(!t)return null;t=t[e[o]]}return t}function D(n,r,e){console.warn(e?"Native: tried calling "+n+"."+e+", but the "+n+" plugin is not installed.":"Native: tried accessing the "+n+" plugin but it's not installed."),r&&console.warn("Install the "+n+" plugin: 'ionic cordova plugin add "+r+"'")}function F(n,r){typeof process>"u"&&console.warn(r?"Native: tried calling "+n+"."+r+", but Cordova is not available. Make sure to include cordova.js or run in a device/simulator":"Native: tried accessing the "+n+" plugin but Cordova is not available. Make sure to include cordova.js or run in a device/simulator")}var y=function(n,r,e){return e===void 0&&(e={}),function(){for(var t=[],o=0;o<arguments.length;o++)t[o]=arguments[o];return e.sync?f(n,r,t,e):e.observable?L(n,r,t,e):e.eventObservable&&e.event?U(e.event,e.element):e.otherPromise?N(n,r,t,e):T(n,r,t,e)}};function C(n,r){for(var e=r.split("."),t=n,o=0;o<e.length;o++){if(!t)return null;t=t[e[o]]}return t}var p=function(){function n(){}return n.installed=function(){var r=l(this.pluginRef)===!0;return r},n.getPlugin=function(){return typeof window<"u"?C(window,this.pluginRef):null},n.getPluginName=function(){var r=this.pluginName;return r},n.getPluginRef=function(){var r=this.pluginRef;return r},n.getPluginInstallName=function(){var r=this.plugin;return r},n.getSupportedPlatforms=function(){var r=this.platforms;return r},n.pluginName="",n.pluginRef="",n.plugin="",n.repo="",n.platforms=[],n.install="",n}();function g(n,r,e,t){return y(n,r,e).apply(this,t)}A();var vr=function(n){h(r,n);function r(){var e=n!==null&&n.apply(this,arguments)||this;return e.REQUEST_PRIORITY_NO_POWER=0,e.REQUEST_PRIORITY_LOW_POWER=1,e.REQUEST_PRIORITY_BALANCED_POWER_ACCURACY=2,e.REQUEST_PRIORITY_HIGH_ACCURACY=3,e.SUCCESS_SETTINGS_SATISFIED=0,e.SUCCESS_USER_AGREED=1,e.ERROR_ALREADY_REQUESTING=-1,e.ERROR_INVALID_ACTION=0,e.ERROR_INVALID_ACCURACY=1,e.ERROR_EXCEPTION=1,e.ERROR_CANNOT_CHANGE_ACCURACY=3,e.ERROR_USER_DISAGREED=4,e.ERROR_GOOGLE_API_CONNECTION_FAILED=4,e}return r.prototype.canRequest=function(){return g(this,"canRequest",{},arguments)},r.prototype.isRequesting=function(){return g(this,"isRequesting",{},arguments)},r.prototype.request=function(e){return g(this,"request",{callbackOrder:"reverse"},arguments)},r.\u0275fac=(()=>{let e;return function(o){return(e||(e=P(r)))(o||r)}})(),r.\u0275prov=x({token:r,factory:r.\u0275fac}),r.pluginName="LocationAccuracy",r.plugin="cordova-plugin-request-location-accuracy",r.pluginRef="cordova.plugins.locationAccuracy",r.repo="https://github.com/dpa99c/cordova-plugin-request-location-accuracy",r.platforms=["Android","iOS"],r=R([],r),r}(p);export{vr as a};
